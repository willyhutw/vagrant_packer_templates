---
#- name: Set hostname
#  hostname: name=localhost

- name: Update repositories
  apt: update_cache=yes
  tags:
    - packages
  when: ansible_os_family == 'Debian'

- block:
    - name: Install EPEL repo.
      yum: name="{{ epel_repo_url }}"
      register: result
      until: '"failed" not in result'
      retries: 5
      delay: 10
    - name: Import EPEL GPG key.
      rpm_key: key="{{ epel_repo_gpg_key_url }}"
  when: ansible_os_family == 'RedHat'

- name: Install common packages
  package: name={{ item }}
  with_items:
    - "{{ common_packages }}"
    - "{{ distribution_specific_packages }}"
  tags:
    - packages

# password is "vagrant"
- name: Chnage root password
  user: name=root password={{ root_password }}
  tags:
    - users

- name: Set format for history command (/etc/profile.d/history_format.sh)
  copy:
    src: etc/profile.d/history_format.sh
    dest: /etc/profile.d/
    mode: 0644
  tags:
    - history_format

- name: Add sar alias ({{ bashrc_configuration_file }})
  lineinfile:
    dest: "{{ bashrc_configuration_file }}"
    regexp: '^alias sar='
    line: "alias sar='LANG=C sar'"
    backup: yes
  tags:
    - bashrc

- name: Tweak logrotate (/etc/logrotate.conf)
  blockinfile:
    dest: /etc/logrotate.conf
    insertafter: "^create"
    block: |
      compress
      compresscmd /usr/bin/xz
      compressoptions -9
      uncompresscmd /usr/bin/unxz
      compressext .xz
    backup: yes
  tags:
    - logrotate

- name: Configure sshd
  blockinfile:
    backup: yes
    dest: /etc/ssh/sshd_config
    block: |
      ClientAliveInterval 60
      Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
    #validate: sshd -tf %s
  notify: reload sshd
  tags:
    - sshd

- name: Allow root SSH access and set "PasswordAuthentication yes" in /etc/ssh/sshd_config
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  #validate: sshd -tf %s
  with_items:
    - { regexp: '^PermitRootLogin', line: 'PermitRootLogin yes' }
    - { regexp: '^PasswordAuthentication', line: 'PasswordAuthentication yes' }
  notify: reload sshd
  tags:
    - sshd

- name: Remove /dev/fd0 (floppy) from /etc/fstab (floppy is presend by default when using KVM provisioner)
  mount:
    name: /media/floppy0
    src: /dev/fd0
    fstype: auto
    state: absent
  tags:
    - fstab

- name: Ensure fstab uses nodiratime and noatime
  replace:
    dest: /etc/fstab
    regexp: '(\s)defaults'
    replace: '\1 noatime,nodiratime,defaults'
    backup: yes
  tags:
    - fstab

- name: Check if /root/.ssh/authorized_keys exists
  stat: path=/root/.ssh/authorized_keys
  register: root_authorized_keys
  tags:
    - ssh

- name: Remove the Amazon AWS "disable root" feature
  replace:
    dest: /root/.ssh/authorized_keys
    regexp: "^no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command=\"echo \\'Please login as the user \\\\\"{{ ansible_user }}\\\\\" rather than the user \\\\\"root\\\\\".\\';echo;sleep 10\" ssh-.*"
    backup: yes
  when: root_authorized_keys.stat.exists
  tags:
    - ssh


- include: "{{ ansible_os_family }}.yml"


- name: Disable and stop services during boot
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items:
    - "{{ disable_distribution_specific_boot_services }}"
  when: disable_distribution_specific_boot_services
  tags:
    - services

- name: Enable services during boot
  service: name={{ item }} enabled=yes
  with_items: "{{ enable_distribution_specific_boot_services }}"
  when: enable_distribution_specific_boot_services
  tags:
    - services
